06. greedy
p.183

- 현재 상태에서의 최선의 선택지가 전체 선택지 중 최선의 선택지라고 가정하는 알고리즘

핵심 이론
    1. 해 선택: 현재 상태에서 가장 최선이라고 생각되는 해를 선택
    2. 적절성 검사: 현재 선택한 해가 전체 문제의 제약 조건에 벗어나지 않는지 검사
    3. 해 검사: 현재까지 선택한 해 집합이 전체 문제를 해결할 수 있는지 검사. 해결하지 못한다면 1로 돌아가 같은 과정을 반복

링크
    https://www.acmicpc.net/problem/11047

<동전 개수의 최소값 구하기: 동전 0>

직접 풀이

    문제 해석
        - 동전이 N종류
        - 각 동전은 많음
        - 동전을 적절히 사용해서 총 합을 k로 만든다
        - 필요한 동전 개수의 최소값을 구하는 프로그램 작성하기

    입출력 해석
        - 종류, 목표금액 입력
        - 각 동전의 가격을 오름차순으로 입력
        - 각 동전은 무수히 많다고 가정

    문제 분석
        - 최소 개수를 구해야하므로 목표 금액보다 작고 전체 동전 종류중에 가장 큰 동전을 선택
        - 선택된 동전으로부터 내림차순으로 합하는데 목표 금액보다 커질 경우 패스(같은 동전을 여러번 합하는 경우도 고려)


결과
    첫번째 시도
    결과: 성공

    31252KB	40ms


피드백

    쉬운 문제라 한번에 통과했지만 아쉬운점 하나

        count = K // ele
        result += count
        K -= count * ele

    몫을 count하고 나머지를 K로 최신화시키는 과정에서 나머지 연산을 사용하지 않은 것


마무리

    쉬운 구현이지만 greedy알고리즘은 반복과 탐색이 필수적일 것임.
    Priority Queue와 Heapq에 대해 공부하고 적용해봐야함.
